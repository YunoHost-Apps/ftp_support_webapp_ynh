#!/bin/bash

source .fonctions	# Charge les fonctions génériques habituellement utilisées dans le script

CLEAN_SETUP () {
# Nettoyage des résidus d'installation non pris en charge par le script remove.
# Pas de nettoyage supplémentaire nécessaire ici...
	echo ""
}
TRAP_ON	# Active trap pour arrêter le script si une erreur est détectée.

# Retrieve arguments
domain=$YNH_APP_ARG_DOMAIN
admin=$YNH_APP_ARG_ADMIN
language=$YNH_APP_ARG_LANGUAGE

app=$YNH_APP_INSTANCE_NAME

# Source app helpers
source /usr/share/yunohost/helpers

# Vérifie que les variables ne sont pas vides.
CHECK_VAR "$app" "app name not set"


path=/ftp_webapp_$admin
parent_dir=/var/www/webapp_$admin
final_path=$parent_dir/netftp

CHECK_USER "$admin"	# Vérifie la validité de l'user admin

CHECK_PATH	# Vérifie et corrige la syntaxe du path.
CHECK_DOMAINPATH	# Vérifie la disponibilité du path et du domaine.

# Créer le dossier parent des webapp pour l'utilisateur
if test ! -d $parent_dir
then	# Créer le dossier parent uniquement si il n'existe pas
    sudo mkdir $parent_dir
    # Set permissions
    sudo chmod 755 -R $parent_dir
    sudo chown -R root: $parent_dir
else
    echo "Création du dossier $parent_dir ignorée, le dossier existe déjà."
fi

# Vérifie si pure-ftpd est déjà installé
if test ! -f /usr/sbin/pure-ftpd-ldap
then # Installe Pure-ftpd uniquement si il ne l'est pas déjà

	FIND_PORT 21021	# Cherche un port libre.

	# Ouvre le port dans le firewall
	sudo yunohost firewall allow TCP $port > /dev/null 2>&1

    # Install debian dependencies
    sudo apt-get update
    sudo apt-get install pure-ftpd-ldap -y -qq
else
    echo "Installation de pure-ftpd ignorée, pure-ftpd est déjà installé."
	port=$(cat /etc/pure-ftpd/conf/Bind)
fi

# Change user ID in configurations
sed -i "s@__FTPUSER__@$admin@g" ../conf/ldap.conf
sed -i "s@__FTPDIR__@$parent_dir@g" ../conf/ldap.conf

# Adapt PureFTPd configuration
sudo cp ../conf/ldap.conf /etc/pure-ftpd/db/
sudo sh -c 'echo "yes" > /etc/pure-ftpd/conf/NoAnonymous'
sudo sh -c 'echo "yes" > /etc/pure-ftpd/conf/ChrootEveryone'
sudo sh -c 'echo "no" > /etc/pure-ftpd/conf/UnixAuthentication'
sudo sh -c 'echo "50000 50100" > /etc/pure-ftpd/conf/PassivePortRange'
sudo sh -c "echo "$port" > /etc/pure-ftpd/conf/Bind"

# Ajoute le service au monitoring de Yunohost.
sudo yunohost service add pure-ftpd-ldap --log "/var/log/pure-ftpd/transfer.log"

# Restart PureFTPd
sudo service pure-ftpd-ldap restart

# Enregistre les infos dans la config YunoHost
ynh_app_setting_set $app domain $domain
ynh_app_setting_set $app path $path
ynh_app_setting_set $app admin $admin
ynh_app_setting_set $app port $port


# Crée le repertoire de destination et stocke son emplacement.
sudo mkdir "$final_path"
ynh_app_setting_set $app final_path $final_path

SETUP_SOURCE "net2ftp.zip"	# Télécharge la source, décompresse et copie dans $final_path

# Et copie le fichier de config nginx
sudo cp ../conf/nginx.conf /etc/nginx/conf.d/$domain.d/netftp_$admin.conf


# Détermine le nom du fichier de langue
case "$language" in
   "Arabic") language_file="ar"
   ;;
   "Arabic UTF-8") language_file="ar-utf"
   ;;
   "Simplified Chinese") language_file="zh"
   ;;
   "Traditional Chinese") language_file="tc"
   ;;
   "Czech") language_file="cs"
   ;;
   "Danish UTF-8") language_file="da"
   ;;
   "Dutch") language_file="nl"
   ;;
   "English") language_file="en"
   ;;
   "English UTF-8") language_file="en-utf"
   ;;
   "French") language_file="fr"
   ;;
   "German") language_file="de"
   ;;
   "Finnish") language_file="fi"
   ;;
   "Hebrew") language_file="he"
   ;;
   "Hungarian") language_file="hu"
   ;;
   "Hungarian UTF-8") language_file="hu-utf"
   ;;
   "Italian") language_file="it"
   ;;
   "Japanese") language_file="ja"
   ;;
   "Polish") language_file="pl"
   ;;
   "Portugese") language_file="pt"
   ;;
   "Russian") language_file="ru"
   ;;
   "Spanish") language_file="es"
   ;;
   "Swedish") language_file="sv"
   ;;
   "Turkish") language_file="tr"
   ;;
   "Ukrainian") language_file="ua"
   ;;
   "Vietnamese") language_file="vi"
   ;;
esac
ynh_app_setting_set $app language_file $language_file

# Configurer net2ftp
sed -i "s@__DOMAIN__@$domain@" ../conf/settings_authorizations.inc.php
sed -i "s@__PORT__@$port@" ../conf/settings_authorizations.inc.php
sed -i "s@__LANG__@$language_file@" ../conf/settings.inc.php
sed -i "s@__PORT__@$port@" ../conf/registerglobals.inc.php

# Copier les fichiers de config
sudo cp ../conf/settings_authorizations.inc.php $final_path
sudo cp ../conf/settings.inc.php $final_path
STORE_MD5_CONFIG "settings_authorizations.inc.php" "$final_path/settings_authorizations.inc.php"	# Enregistre la somme de contrôle du fichier de config
STORE_MD5_CONFIG "settings.inc.php" "$final_path/settings.inc.php"	# Enregistre la somme de contrôle du fichier de config
sudo cp ../conf/registerglobals.inc.php $final_path/includes

# Configure les droits d'accès au fichiers
# -rw-r--r-- sur les fichiers
sudo find $final_path -type f -print0 | xargs -0 sudo chmod 644
# drwxr-xr-x sur les dossiers
# sudo find $final_path -type d | xargs sudo chmod 755
sudo find $final_path -type d -print0 | xargs -0 sudo chmod 755
# Les fichiers appartiennent à root
sudo chown -R root: $final_path

# www-data doit avoir les droits d'écriture sur le dossier temp.
sudo chown -R www-data: $final_path/temp

# Modifie les variables dans le fichier de configuration nginx
sudo sed -i "s@__PATHTOCHANGE__@$path@g" /etc/nginx/conf.d/$domain.d/netftp_$admin.conf
sudo sed -i "s@__FINALPATH__@$final_path@g" /etc/nginx/conf.d/$domain.d/netftp_$admin.conf
sudo sed -i "s@__NAMETOCHANGE__@$app@g" /etc/nginx/conf.d/$domain.d/netftp_$admin.conf


POOL_FPM	# Créer le fichier de configuration du pool php-fpm et le configure.

# Configuration de logrotate
sudo cp ../conf/logrotate /etc/logrotate.d/$app


# Recharge la configuration Nginx
sudo service nginx reload
# Régénère la configuration de SSOwat
sudo yunohost app ssowatconf
